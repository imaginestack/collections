---
- name: Disable RKE2 services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop:
    - rke2-server
    - rke2-agent
  failed_when: false

- name: Kill containerd-shim processes
  command: pkill -9 -f "rke2/data/[^/]+/bin/containerd-shim-runc"
  register: pkill_containerd_shim_runc
  changed_when: pkill_containerd_shim_runc.rc == 0
  failed_when: false

- name: Unmount RKE2 filesystems
  include_tasks: umount_with_children.yml
  loop: 
    - /run/rke2
    - /var/lib/kubelet
    - /run/netns
    - /var/lib/rancher/rke2
    - /var/lib/kubelet/pods
    - /var/lib/kubelet/plugins
    - /run/netns/cni-
  loop_control:
    loop_var: mounted_fs

- name: Remove RKE2 service files, binaries, and data
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /usr/local/bin/rke2
    - "{{ systemd_dir }}/rke2-server.service"
    - "{{ systemd_dir }}/rke2-agent.service"
    - /etc/rancher/rke2
    - /run/rke2
    - /run/flannel
    - /etc/rancher/
    - /var/lib/kubelet
    - /var/lib/rancher/rke2
    - /var/lib/rancher/
    - /var/lib/cni/
    - /etc/cni/net.d

- name: Remove RKE2 HTTP proxy files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ systemd_dir }}/rke2-server.service.d/http_proxy.conf"
    - "{{ systemd_dir }}/rke2-server.service.d"
    - "{{ systemd_dir }}/rke2-agent.service.d/http_proxy.conf"
    - "{{ systemd_dir }}/rke2-agent.service.d"
  when: proxy_env is defined

- name: Reload systemd daemon
  systemd:
    daemon_reload: true

- name: Remove temporary directory used for manifests
  file:
    path: /tmp/rke2
    state: absent

- name: Check if rc.local exists
  stat:
    path: /etc/rc.local
  register: rcfile

- name: Remove rc.local modifications
  blockinfile:
    path: /etc/rc.local
    content: "{{ lookup('template', 'templates/rc.local.j2') }}"
    create: false
    state: absent
  when: rcfile.stat.exists

- name: Check rc.local for cleanup
  slurp:
    src: /etc/rc.local
  register: rcslurp
  when: rcfile.stat.exists

- name: Cleanup rc.local if we only have a Shebang line
  file:
    path: /etc/rc.local
    state: absent
  when: rcfile.stat.exists and ((rcslurp.content | b64decode).splitlines() | length) <= 1
